// abstracts folder imports
@import './abstracts/functions';
@import './abstracts/mixins';
@import './abstracts/variables';


// base folder imports
@import './base/base';
@import '.base/animations';
@import './base/typography';
@import './base/utilities';


// pages folder imports
@import './pages/home';


/*
COLORS:
Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485
*/

*, 
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;  /* Forces every element to inherit the value specified in the body selector */
}

html {  /* Root font size is set in html selector */
  font-size: 62.5%;
}

body {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  /* font-size: 1rem; */
  line-height: 1.7;
  color: $color-grey-dark;
  padding: 3rem;  /* Creates 'border' around entire web page! */
  box-sizing: border-box; /* Border & Padding will now be included in height & width measurements */
}

.header {
  position: relative;
  height: 95vh;
  background-image: linear-gradient(to right bottom, 
  rgba($color-primary-light, 0.8), 
  rgba($color-primary-dark, 0.8)), 
  url('../img/hero.jpg');

  background-size: cover;
  background-position: top;  /* Ensures that top of image always stays at top of container on all viewport sizes */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);  /* Specify coordinates which define the polygon */

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }
  
  &__logo {
    height: 3.5rem;  /* The browser will automatically scale the width accordingly */
  }
  
  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
  }
}

.heading-primary {
  color: $color-white;
  text-transform: uppercase;
  backface-visibility: hidden;  /* Guards against animation 'shakiness' */
  margin-bottom: 6rem;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;

  animation-name: moveInLeft;  /* Animation being referenced */
  animation-duration: 1s;  /* How long animation should take */
  animation-timing-function: ease-out;  /* This determines how the animation should proceed */

  /* animation-iteration-count: 3; */
  /* animation-delay: 3s; */
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {  /* Percentages correspond to times during the animation */
  0% {  /* Before the animation starts */
    opacity: 0;
    transform: translateX(-10rem);
  }

  80% {  /* You can include ANY percentage you want! */
    transform: translateX(1rem);
  }

  100% {  /* When the animation finishes */
    opacity: 1;
    transform: translate(0);  /* Setting it to 0 means it will look the way it does normally */
  }
}

@keyframes moveInRight {  /* Percentages correspond to times during the animation */
  0% {  /* Before the animation starts */
    opacity: 0;
    transform: translateX(10rem);
  }

  80% {  /* You can include ANY percentage you want! */
    transform: translateX(-1rem);
  }

  100% {  /* When the animation finishes */
    opacity: 1;
    transform: translate(0);  /* Setting it to 0 means it will look the way it does normally */
  }
}

@keyframes moveInFromBottom {  /* Percentages correspond to times during the animation */
  0% {  /* Before the animation starts */
    opacity: 0;
    transform: translateY(3rem);
  }

  100% {  /* When the animation finishes */
    opacity: 1;
    transform: translate(0);  /* Setting it to 0 means it will look the way it does normally */
  }
}

.btn {
  &:link, 
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all 0.2s;
    position: relative;  /* Reference for ::after psuedo-element */
    font-size: 1.6rem;  /* This makes it equal to 16px as it was before */
  }
  
  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba($color-black, .2);

    &::after {  /* The ::after psuedo-element is being applied in the hover state */
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }
  
  &:active {
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem rgba($color-black, .2);
  }
  
  &--white {
    color: $color-grey-dark;
    background-color: $color-white;

    &::after {
      background-color: $color-white;
    }
  }
  
  &::after {
    content: '';  /* Content property must be specified for the ::after psuedo-element to appear */
    display: inline-block;  /* Display property must also be specified */
    width: 100%;
    height: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;  /* Places ::after psuedo-element behind the button */
    transition: all 0.4s;
  }
  
  // &--white::after {
  //   background-color: $color-white;
  // }
  
  // &:hover::after {  /* The ::after psuedo-element is being applied in the hover state */
  //   transform: scaleX(1.4) scaleY(1.6);
  //   opacity: 0;
  // }
  
  &--animated {
    animation: moveInFromBottom 0.5s ease-out 0.75s;
    animation-fill-mode: backwards;  /* Automatically applies styles of the 0% BEFORE the animation starts */
  }
}

// .btn:link, .btn:visited {
//   text-transform: uppercase;
//   text-decoration: none;
//   padding: 1.5rem 4rem;
//   display: inline-block;
//   border-radius: 10rem;
//   transition: all 0.2s;
//   position: relative;  /* Reference for ::after psuedo-element */
//   font-size: 1.6rem;  /* This makes it equal to 16px as it was before */
// }

// .btn:hover {
//   transform: translateY(-3px);
//   box-shadow: 0 1rem 2rem rgba($color-black, .2);
// }

// .btn:active {
//   transform: translateY(-1px);
//   box-shadow: 0 .5rem 1rem rgba($color-black, .2);
// }

// .btn--white {
//   color: $color-grey-dark;
//   background-color: $color-white;
// }

// .btn::after {
//   content: '';  /* Content property must be specified for the ::after psuedo-element to appear */
//   display: inline-block;  /* Display property must also be specified */
//   width: 100%;
//   height: 100%;
//   border-radius: 10rem;
//   position: absolute;
//   top: 0;
//   left: 0;
//   z-index: -1;  /* Places ::after psuedo-element behind the button */
//   transition: all 0.4s;
// }

// .btn--white::after {
//   background-color: $color-white;
// }

// .btn:hover::after {  /* The ::after psuedo-element is being applied in the hover state */
//   transform: scaleX(1.4) scaleY(1.6);
//   opacity: 0;
// }

// .btn--animated {
//   animation: moveInFromBottom 0.5s ease-out 0.75s;
//   animation-fill-mode: backwards;  /* Automatically applies styles of the 0% BEFORE the animation starts */
// }